apiVersion: apps/v1
kind: ReplicaSet
metadata:
  labels: {{- include "dfour-hub.labels" . | nindent 4 }}
    app: {{ template "dfour-hub.name" . }}
  name: dfour-hub
  namespace: {{ include "release_namespace" . }}
spec:
  replicas: {{ .Values.hub.replicas }}
  selector:
    matchLabels:  
      app: {{ template "dfour-hub.name" . }}
  template:
    metadata:
      labels: {{- include "dfour-hub.labels" . | nindent 8 }}
        app: {{ template "dfour-hub.name" . }}
    spec:
      containers:
      - name: dfour-hub
        {{- if .Values.hub.digest }}
        image: {{ .Values.hub.image }}:{{ .Values.hub.tag }}@{{ .Values.hub.digest }}
        {{- else }}
        image: {{ .Values.hub.image }}:{{ .Values.hub.tag }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        env:
        - name: DJANGO_ALLOWED_HOSTS
          value: "{{ .Values.hub.allowedHosts }}"
        - name: TERM
          value: "{{ .Values.hub.terminal }}"
        - name: START_DJANGO
          value: "{{ .Values.hub.autostart }}"
        {{- if .Values.proxy.ingress.hostName }}
        - name: DJANGO_HOST
          value: "{{ .Values.proxy.ingress.hostName }}"
        {{- end }}
        - name: DJANGO_PORT
          value: "{{ .Values.hub.port }}"
        - name: DJANGO_DEBUG
          value: "{{ .Values.hub.debug }}"
        - name: DJANGO_HTTPS
          value: "{{ .Values.hub.https }}"
        - name: DJANGO_DEFAULT_FROM_EMAIL
          value: {{ .Values.hub.email.from }}
        - name: DJANGO_EMAIL_USE_TLS
          value: "{{ .Values.hub.email.tls }}"
        - name: DJANGO_EMAIL_HOST
          value: "{{ .Values.hub.email.host }}"
        - name: DJANGO_EMAIL_PORT
          value: "{{ .Values.hub.email.port }}"
        - name: DJANGO_ADMIN_NAME
          value: "{{ .Values.hub.admin.headerTitle }}"
        - name: DJANGO_ADMIN_HEADER_COLOR
          value: "{{ .Values.hub.admin.headerColor }}"
        - name: DJANGO_SCREENSHOT_SCHEDULER_CRON_MINUTES
          value: "{{ .Values.hub.screenshot.cronJob }}"
        - name: START_APSCHEDULER
          value: "{{ .Values.hub.screenshot.run }}"
        - name: DJANGO_MUNICIAPLITIES
          value: "{{ .Values.hub.municipalitiesUrl }}"
        - name: DJANGO_OIDC_LOGIN
          value: "{{ .Values.hub.oidc.enabled }}"
        - name: OIDC_OP_AUTHORIZATION_ENDPOINT
          value: "{{ .Values.hub.oidc.opAuhorizationEndpoint }}"
        - name: OIDC_OP_TOKEN_ENDPOINT
          value: "{{ .Values.hub.oidc.opTokenEndpoint }}"
        - name: OIDC_OP_USER_ENDPOINT
          value: "{{ .Values.hub.oidc.opUserEndpoint }}"
        - name: OIDC_OP_JWKS_ENDPOINT
          value: "{{ .Values.hub.oidc.opJwksEndpoint }}"
        - name: OIDC_OP_LOGOUT_ENDPOINT
          value: "{{ .Values.hub.oidc.opLogoutEndpoint }}"
        envFrom:
        - secretRef:
            # Secrets Ref for additional secret values
            # Needs to be present in namespace before installation
            name: {{ .Values.hub.secretsRef }}
        ports:
          - containerPort: 8081
            name: gunicorn
        volumeMounts:
        - name: {{ template "dfour-hub.name" . }}-volume
          mountPath: /var/services
        livenessProbe:
          tcpSocket:
            port: gunicorn
          initialDelaySeconds: 15
          periodSeconds: 20
          failureThreshold: 30
        resources:
          requests:
            memory: "{{ .Values.hub.memory.request }}"
          limits:
            memory: "{{ .Values.hub.memory.limit }}"
      - name: dfour-proxy
        {{- if .Values.proxy.digest }}
        image: {{ .Values.proxy.image }}:{{ .Values.proxy.tag }}@{{ .Values.proxy.digest }}
        {{- else }}
        image: {{ .Values.proxy.image }}:{{ .Values.proxy.tag }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        env:
        - name: NGINX_SERVER_NAME
          value: "{{ .Values.proxy.ingress.hostName }}"
        - name: NGINX_PORT
          value: "{{ .Values.proxy.port }}"
        - name: NGINX_HUB_UPSTREAM
          value: "{{ .Values.proxy.upstream }}:{{ .Values.hub.port }}"
        - name: NGINX_ACCESS_LOG
          value: "{{ .Values.proxy.accessLog }}"
        - name: NGINX_ERROR_LOG
          value: "{{ .Values.proxy.errorLog }}"
        - name: NGINX_MAX_BODY_SIZE
          value: "{{ .Values.proxy.maxBodySize }}"
        ports:
          - containerPort: 8000
        volumeMounts:
        - name: {{ template "dfour-hub.name" . }}-volume
          mountPath: /var/services
        resources:
          requests:
            memory: "100Mi"
          limits:
            memory: "500Mi"
      volumes:
      - name: {{ template "dfour-hub.name" . }}-volume
        persistentVolumeClaim:
          claimName: pvc-{{ template "dfour-hub.name" . }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "dfour-hub.name" . }}
            topologyKey: "kubernetes.io/hostname"
